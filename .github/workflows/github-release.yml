name: GitHub Release

on:
  release:
    types: [ published ]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        include:
          - kind: linux
            os: ubuntu-latest
            targets: ['linux-x64', 'linux-arm64']
          - kind: macos
            os: macos-latest
            targets: ['osx-x64', 'osx-arm64']
          - kind: windows
            os: windows-latest
            targets: ['win-x64', 'win-arm64']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Build
        run: |
          tag=$(git describe --tags --abbrev=0)
          # Build everything
          ASSEMBLY_VERSION="${tag//v}"
          for target in "${{ matrix.targets }}"; do
            release_name="HostsParser-$tag-$target"
            if [ "${{ matrix.kind }}" == "windows" ]; then
              if [ "$target" == "win-x64" ]; then
                dotnet publish "./src/HostsParser/HostsParser.csproj" -r $target -c Release -o release //p:Version="$ASSEMBLY_VERSION" //p:PublishAot=true
              else
                dotnet publish "./src/HostsParser/HostsParser.csproj" -r $target -c Release -o release //p:Version="$ASSEMBLY_VERSION"
              fi
              # Pack to zip for Windows
              7z a -tzip "${release_name}.zip" "./release/*"
            else
              if [[ "$target" == *arm64 ]]; then
                dotnet publish "./src/HostsParser/HostsParser.csproj" -r $target -c Release -o release /p:Version="$ASSEMBLY_VERSION"
              else
                dotnet publish "./src/HostsParser/HostsParser.csproj" -r $target -c Release -o release /p:Version="$ASSEMBLY_VERSION" /p:PublishAot=true
              fi
              # Pack tar.gz for non-Windows
              tar -czvf "${release_name}.tar.gz" -C ./release .
            fi
            # Delete output directory
            rm -r "./release"
          done
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: |
            HostsParser*.zip
            HostsParser*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}