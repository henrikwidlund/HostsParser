name: Publish Filter

on:
  push:
#    branches:
#      - main
#  schedule:
#    - cron: '0 */6 * * *' # Every 6 hours

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Download latest release
        run: |
          mkdir artifacts && cd artifacts
          curl -sL $(curl -s https://api.github.com/repos/henrikwidlund/HostsParser/releases/latest | grep browser_download_url | cut -d\" -f4 | grep 'linux-x64.tar.gz$') | tar zx

      - name: Create public directory
#        if: github.ref == 'refs/heads/main'
        run: mkdir ./public

      - name: Fallback config
#        if: github.ref == 'refs/heads/main'
        run: |
          CONFIGURATIONS_DIRECTORY="./artifacts/Configurations"
          if [ ! -d "$CONFIGURATIONS_DIRECTORY" ]; then
            cp -r "./src/HostsParser/Configurations" "$CONFIGURATIONS_DIRECTORY"
          fi

      - name: Create filters
#        if: github.ref == 'refs/heads/main'
        run: |
          cd ./artifacts
          for filename in ./Configurations/*.json; do
              cp $filename ../artifacts/appsettings.json
              dotnet HostsParser.dll
              CONFIG_FILE=$(echo $filename | cut -d'/' -f 3)
              CONFIG=${CONFIG_FILE//json/txt}
              cp $CONFIG ../public/$CONFIG
          done

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './public'

#  deploy:
#    needs: generate
#    runs-on: ubuntu-latest
#
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v2