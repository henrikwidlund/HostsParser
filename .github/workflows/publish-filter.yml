name: Publish Filter

on:
  workflow_run:
    workflows:
      - "github-release"
    types:
      - completed
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Download latest release
        run: |
          mkdir artifacts && cd artifacts
          curl -sL $(curl -s https://api.github.com/repos/henrikwidlund/HostsParser/releases/latest | grep browser_download_url | cut -d\" -f4 | grep 'linux-x64.tar.gz$') | tar zx

      - name: Create public directory
        if: github.ref == 'refs/heads/main'
        run: mkdir ./public

      - name: Create filters
        if: github.ref == 'refs/heads/main'
        run: |
          cd ./artifacts
          for filename in ./Configurations/*.json; do
              cp $filename ../artifacts/appsettings.json
              dotnet HostsParser.dll
              CONFIG_FILE=$(echo $filename | cut -d'/' -f 3)
              CONFIG=${CONFIG_FILE//json/txt}
              #  Default filter doesn't map to the file name of the config, it's just "filter.txt"
              if [[ ! -f "$CONFIG" ]]; then
                CONFIG="filter.txt"
              fi
              cp $CONFIG ../public/$CONFIG
          done

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './public'

  deploy:
    needs: generate
    runs-on: ubuntu-latest
    timeout-minutes: 15

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2